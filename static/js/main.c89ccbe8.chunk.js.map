{"version":3,"sources":["logo.svg","components/total.jsx","components/product.jsx","components/productListdet.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Total","props","checkout","bind","total","this","confirmAlert","customUI","onClose","className","onClick","qty","console","log","PureComponent","Product","state","add","subtract","setState","handleTotal","price","displayqty","displayqtyminus","src","imgurl","alt","offertxt","brandname","prodname","quantity","mrp","disabled","ProductListdet","productList","products","calculateTotal","showqty","showqtyminus","fetch","headers","then","response","json","data","component","productsdet","map","product","class","App","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c89ccbe8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Fragment, PureComponent } from 'react';\r\nimport '../App.css';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nclass Total extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkout = this.checkout.bind(this);\r\n\r\n  }\r\n\r\n  checkout() {\r\n    let total = this.props.total\r\n    // alert('Total price is: '+total+'<br/> Thanks for shopping with us');\r\n\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n\r\n          <div className='custom-ui'>\r\n            <button\r\n              onClick={() => {\r\n\r\n                onClose();\r\n\r\n              }}>X</button>\r\n            <h1>Total Price is: Rs. {total}</h1>\r\n            <h2>Transaction successful</h2>\r\n\r\n          </div>\r\n\r\n        );\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n\r\n    let total = this.props.total\r\n    let qty = this.props.qty\r\n    console.log('qty in render total', qty);\r\n\r\n\r\n\r\n    let mystyle = {\r\n      borderTop: \"1px solid #ddd\",\r\n      marginTop: \"10px\"\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <div className=\"footer\">\r\n          <h3 className=\"row\" >\r\n            <span className=\"col-6\">Qty:</span>\r\n            <span className=\"col-6 text-right\">{qty}</span>\r\n          </h3>\r\n          <h3 className=\"row\" >\r\n            <span className=\"col-6\">Total:</span>\r\n            <span className=\"col-6 text-right\">{total}</span>\r\n          </h3>\r\n\r\n\r\n          <button className=\"btn btn-outline-primary\" onClick={this.checkout}>\r\n            Checkout\r\n        </button>\r\n        </div>\r\n\r\n\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Total;","import React, { Fragment, PureComponent } from 'react';\r\nimport '../App.css';\r\nimport Total from './total';\r\nimport ProductListdet from './productListdet';\r\n\r\nclass Product extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      qty: 0\r\n    };\r\n    this.add = this.add.bind(this);\r\n    this.subtract = this.subtract.bind(this);\r\n\r\n  }\r\n\r\n  add() {\r\n    this.setState({\r\n      qty: this.state.qty + 1\r\n    });\r\n    this.props.handleTotal(this.props.price);\r\n    console.log('this.state.qty', this.state.qty)\r\n    this.props.displayqty(this.state.qty);\r\n  }\r\n\r\n  subtract() {\r\n    this.setState({\r\n      qty: this.state.qty - 1\r\n    });\r\n    this.props.handleTotal(-this.props.price);\r\n    this.props.displayqtyminus(-this.state.qty);\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    const { qty } = this.state;\r\n    console.log('qty in product render', qty)\r\n    let mystyleprod = {\r\n      display: \"block\"\r\n    };\r\n    return (\r\n      <Fragment>\r\n\r\n        <div className=\"product\">\r\n          <div className=\"product-image\">\r\n            <img src={this.props.imgurl} alt=\"prodimg\" />\r\n            <div className=\"offertext\">\r\n               <p>{this.props.offertxt}</p>\r\n            </div>  \r\n          </div>\r\n          <div className=\"product-details\">\r\n            <h3 className=\"product-title\">{this.props.brandname}</h3>\r\n            <p className=\"product-description\">{this.props.prodname}</p>\r\n            <p className=\"product-quantity\"> {this.props.quantity} </p>\r\n            <p className=\"product-mrp\"> MRP {this.props.mrp} </p>\r\n            <p className=\"product-price\">Rs. {this.props.price}</p>\r\n            <button className=\"btn btn-outline-primary btncart\" onClick={this.add}> Add to Cart </button>\r\n            <button className=\"btn btn-outline-primary btnqty\" onClick={this.add}> + </button>\r\n            <span>{this.state.qty} </span>\r\n            <button className=\"btn btn-outline-primary btnqty\" onClick={this.subtract} disabled={this.state.qty < 1}> - </button> \r\n\r\n              \r\n          </div>\r\n\r\n        </div>\r\n\r\n  \r\n\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React, { Fragment, PureComponent } from 'react';\r\nimport '../App.css';\r\nimport Product from './product';\r\nimport Total from './total';\r\n//import { products } from \"../config.json\";\r\n\r\nclass ProductListdet extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"----------------------------------------\", this.props);\r\n    this.state = {\r\n      total: 0,\r\n      qty: 0,\r\n      // productList: \"\"\r\n\r\n      productList: [],\r\n      products: []\r\n    };\r\n\r\n    // this.createProduct = this.createProduct.bind(this);\r\n    this.calculateTotal = this.calculateTotal.bind(this);\r\n\r\n    this.showqty = this.showqty.bind(this);\r\n    this.showqtyminus = this.showqtyminus.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch(`./config.json`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n\r\n    })\r\n      .then(response => response.json())\r\n\r\n      .then(data => this.setState({ products: data.products }));\r\n\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   setTimeout(() => {\r\n  //     this.setState({ productList: productList });\r\n  //   }, 1000);\r\n  // }\r\n\r\n  // createProduct(product) {\r\n  //   this.setState({\r\n  //     products: this.state.productList.push(product)\r\n  //   });\r\n  // }\r\n\r\n  calculateTotal(price) {\r\n    this.setState({\r\n      total: this.state.total + price\r\n    });\r\n    console.log(this.state.total);\r\n  }\r\n\r\n\r\n  showqty(qty) {\r\n    this.setState({\r\n      qty: this.state.qty + 1\r\n    });\r\n    console.log('showqtyshowqty in productdetlist', qty);\r\n  }\r\n  showqtyminus(qty) {\r\n    this.setState({\r\n      qty: this.state.qty - 1\r\n    });\r\n    console.log('showqtyshowqty in productdetlist minus', qty);\r\n  }\r\n  render() {\r\n\r\n    // const resArr = this.state.products.map((r, i)=> {\r\n    //   return (<li key={i}>\r\n    //     {r.name}\r\n\r\n    //   </li>\r\n    //   )\r\n    //   console.log('resArr in render', r.name)\r\n    // }) \r\n    // let qty  = this.props.qty\r\n    // console.log('qty in render productlistdet', qty);\r\n    const { qty } = this.state;\r\n    console.log('qty in priductlistdet render', qty)\r\n    if (!this.state.products) return <p>loading...!!!!</p>;\r\n\r\n    var component = this;\r\n    var productsdet = this.state.products.map(function (product) {\r\n      return (\r\n\r\n\r\n        <Product\r\n          brandname={product.brandname}\r\n          prodname={product.prodname}\r\n          quantity={product.quantity}\r\n          price={product.price}\r\n          mrp={product.mrp}\r\n          imgurl={product.imgurl}\r\n          offertxt={product.offertxt}\r\n\r\n          handleTotal={component.calculateTotal}\r\n          displayqty={component.showqty}\r\n          displayqtyminus={component.showqtyminus}\r\n        // qty = {qty}\r\n\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Fragment>\r\n       \r\n        <div class=\"shopping-cart\">\r\n          {productsdet}\r\n          <Total total={this.state.total} qty={this.state.qty} />\r\n        </div>\r\n        <p className=\"footercpy\">Shopping Cart</p>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default ProductListdet;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\nimport ProductListdet from './components/productListdet';\nimport Product from './components/product';\nimport Total from './components/total';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n   \n  }\n\n\n\n\n  render() {\n    return (\n\n\n\n      <Router>\n\n    \n        <div className=\"App\">\n\n\n\n          {/* <Total/>\n          <Product/> */}\n\n          <ProductListdet />\n\n\n\n\n        </div>\n\n      </Router>\n\n\n\n\n    );\n  }\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}